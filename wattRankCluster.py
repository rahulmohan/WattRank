import numpy as np
from scipy import *
import csv
from sklearn.cluster import KMeans

# read data

def genClusters():

	reader = csv.reader(open("recs2009_public.csv","rb"),delimiter=',');
	x = list(reader);
	x = np.array(x);

	# load column ids

	column_ids = ['DOEID,REGIONC,DIVISION,REPORTABLE_DOMAIN,TYPEHUQ,NWEIGHT,HDD65,CDD65,HDD30YR,CDD30YR,Climate_Region_Pub,AIA_Zone,METROMICRO,UR,KOWNRENT,CONDCOOP,YEARMADE,YEARMADERANGE,OCCUPYYRANGE,CONVERSION,ORIG1FAM,LOOKLIKE,NUMFLRS,NUMAPTS,WALLTYPE,ROOFTYPE,STUDIO,NAPTFLRS,STORIES,TYPEHUQ4,BEDROOMS,NCOMBATH,NHAFBATH,OTHROOMS,TOTROOMS,CELLAR,CRAWL,CONCRETE,BASEFIN,FINBASERMS,BASEHEAT,BASEHT2,PCTBSTHT,BASECOOL,BASECL2,PCTBSTCL,BASEUSE,ATTIC,ATTICFIN,FINATTRMS,ATTCHEAT,ATTCHT2,PCTATTHT,ATTCCOOL,ATTCCL2,PCTATTCL,ATTICUSE,PRKGPLC1,SIZEOFGARAGE,GARGLOC,GARGHEAT,GARGCOOL,PRKGPLC2,SIZEOFDETACH,OUTLET,ZKOWNRENT,ZCONDCOOP,ZYEARMADE,ZYEARMADERANGE,ZOCCUPYYRANGE,ZCONVERSION,ZORIG1FAM,ZLOOKLIKE,ZNUMFLRS,ZNUMAPTS,ZWALLTYPE,ZROOFTYPE,ZSTUDIO,ZNAPTFLRS,ZSTORIES,ZTYPEHUQ4,ZBEDROOMS,ZNCOMBATH,ZNHAFBATH,ZOTHROOMS,ZCELLAR,ZCRAWL,ZCONCRETE,ZBASEFIN,ZFINBASERMS,ZBASEHEAT,ZBASEHT2,ZPCTBSTHT,ZBASECOOL,ZBASECL2,ZPCTBSTCL,ZBASEUSE,ZATTIC,ZATTICFIN,ZFINATTRMS,ZATTCHEAT,ZATTCHT2,ZPCTATTHT,ZATTCCOOL,ZPCTATTCL,ZATTCCL2,ZATTICUSE,ZPRKGPLC1,ZSIZEOFGARAGE,ZGARGLOC,ZGARGHEAT,ZGARGCOOL,ZPRKGPLC2,ZSIZEOFDETACH,STOVEN,STOVENFUEL,STOVE,STOVEFUEL,OVEN,OVENFUEL,OVENUSE,OVENCLN,TYPECLN,MICRO,AMTMICRO,DEFROST,OUTGRILL,OUTGRILLFUEL,TOPGRILL,STGRILA,TOASTER,NUMMEAL,FUELFOOD,COFFEE,NUMFRIG,TYPERFR1,SIZRFRI1,REFRIGT1,ICE,AGERFRI1,ESFRIG,REPLCFRI,HELPFRI,HELPFRIY,TYPERFR2,SIZRFRI2,REFRIGT2,MONRFRI2,AGERFRI2,ESFRIG2,TYPERFR3,SIZRFRI3,REFRIGT3,MONRFRI3,AGERFRI3,ESFRIG3,SEPFREEZ,NUMFREEZ,UPRTFRZR,SIZFREEZ,FREEZER,AGEFRZR,REPLCFRZ,HELPFRZ,HELPFRZY,UPRTFRZR2,SIZFREEZ2,FREEZER2,AGEFRZR2,DISHWASH,DWASHUSE,AGEDW,ESDISHW,REPLCDW,HELPDW,HELPDWY,ZSTOVEN,ZSTOVENFUEL,ZSTOVE,ZSTOVEFUEL,ZOVEN,ZOVENFUEL,ZOVENUSE,ZOVENCLN,ZTYPECLN,ZMICRO,ZAMTMICRO,ZDEFROST,ZOUTGRILL,ZOUTGRILLFUEL,ZTOPGRILL,ZSTGRILA,ZTOASTER,ZNUMMEAL,ZFUELFOOD,ZCOFFEE,ZNUMFRIG,ZTYPERFR1,ZSIZRFRI1,ZREFRIGT1,ZICE,ZAGERFRI1,ZTYPERFR2,ZSIZRFRI2,ZREFRIGT2,ZMONRFRI2,ZAGERFRI2,ZTYPERFR3,ZSIZRFRI3,ZREFRIGT3,ZMONRFRI3,ZAGERFRI3,ZSEPFREEZ,ZNUMFREEZ,ZUPRTFRZR,ZSIZFREEZ,ZFREEZER,ZAGEFRZR,ZUPRTFRZR2,ZSIZFREEZ2,ZFREEZER2,ZAGEFRZR2,ZDISHWASH,ZDWASHUSE,ZAGEDW,CWASHER,TOPFRONT,WASHLOAD,WASHTEMP,RNSETEMP,AGECWASH,ESCWASH,REPLCCW,HELPCW,HELPCWY,DRYER,DRYRFUEL,DRYRUSE,AGECDRYER,TVCOLOR,TVSIZE1,TVTYPE1,CABLESAT1,COMBODVR1,DVR1,DIGITSTB1,PLAYSTA1,COMBOVCRDVD1,VCR1,DVD1,TVAUDIOSYS1,OTHERSTB1,TVONWD1,TVONWDWATCH1,TVONWE1,TVONWEWATCH1,TVSIZE2,TVTYPE2,CABLESAT2,COMBODVR2,DVR2,DIGITSTB2,PLAYSTA2,COMBOVCRDVD2,VCR2,DVD2,TVAUDIOSYS2,OTHERSTB2,TVONWD2,TVONWDWATCH2,TVONWE2,TVONWEWATCH2,TVSIZE3,TVTYPE3,CABLESAT3,COMBODVR3,DVR3,DIGITSTB3,PLAYSTA3,COMBOVCRDVD3,VCR3,DVD3,TVAUDIOSYS3,OTHERSTB3,TVONWD3,TVONWDWATCH3,TVONWE3,TVONWEWATCH3,COMPUTER,NUMPC,PCTYPE1,MONITOR1,TIMEON1,PCONOFF1,PCSLEEP1,PCTYPE2,MONITOR2,TIMEON2,PCONOFF2,PCSLEEP2,PCTYPE3,MONITOR3,TIMEON3,PCONOFF3,PCSLEEP3,INTERNET,INDIALUP,INDSL,INCABLE,INSATEL,INWIRELESS,PCPRINT,FAX,COPIER,WELLPUMP,DIPSTICK,SWAMPCOL,AQUARIUM,STEREO,NOCORD,ANSMACH,BATTOOLS,BATCHRG,CHRGPLGT,ELECDEV,ELECCHRG,CHRGPLGE,ZCWASHER,ZTOPFRONT,ZWASHLOAD,ZWASHTEMP,ZRNSETEMP,ZAGECWASH,ZDRYER,ZDRYRFUEL,ZDRYRUSE,ZAGECDRYER,ZTVCOLOR,ZTVSIZE1,ZTVTYPE1,ZCABLESAT1,ZCOMBODVR1,ZDVR1,ZDIGITSTB1,ZPLAYSTA1,ZCOMBOVCRDVD1,ZVCR1,ZDVD1,ZTVAUDIOSYS1,ZOTHERSTB1,ZTVONWD1,ZTVONWDWATCH1,ZTVONWE1,ZTVONWEWATCH1,ZTVSIZE2,ZTVTYPE2,ZCABLESAT2,ZCOMBODVR2,ZDVR2,ZDIGITSTB2,ZPLAYSTA2,ZCOMBOVCRDVD2,ZVCR2,ZDVD2,ZTVAUDIOSYS2,ZOTHERSTB2,ZTVONWD2,ZTVONWDWATCH2,ZTVONWE2,ZTVONWEWATCH2,ZTVSIZE3,ZTVTYPE3,ZCABLESAT3,ZCOMBODVR3,ZDVR3,ZDIGITSTB3,ZPLAYSTA3,ZCOMBOVCRDVD3,ZVCR3,ZDVD3,ZTVAUDIOSYS3,ZOTHERSTB3,ZTVONWD3,ZTVONWDWATCH3,ZTVONWE3,ZTVONWEWATCH3,ZCOMPUTER,ZNUMPC,ZPCTYPE1,ZMONITOR1,ZTIMEON1,ZPCONOFF1,ZPCSLEEP1,ZPCTYPE2,ZMONITOR2,ZTIMEON2,ZPCONOFF2,ZPCSLEEP2,ZPCTYPE3,ZMONITOR3,ZTIMEON3,ZPCONOFF3,ZPCSLEEP3,ZINTERNET,ZINDIALUP,ZINDSL,ZINCABLE,ZINSATEL,ZINWIRELESS,ZPCPRINT,ZFAX,ZCOPIER,ZWELLPUMP,ZDIPSTICK,ZSWAMPCOL,ZAQUARIUM,ZSTEREO,ZNOCORD,ZANSMACH,ZBATTOOLS,ZBATCHRG,ZCHRGPLGT,ZELECDEV,ZELECCHRG,ZCHRGPLGE,HEATHOME,DNTHEAT,EQUIPNOHEAT,FUELNOHEAT,EQUIPM,FUELHEAT,MAINTHT,EQUIPAGE,REPLCHT,HELPHT,HELPHTY,HEATOTH,EQUIPAUX,REVERSE,WARMAIR,FURNFUEL,STEAMR,RADFUEL,PERMELEC,PIPELESS,PIPEFUEL,ROOMHEAT,RMHTFUEL,WOODKILN,HSFUEL,CARRYEL,CARRYKER,CHIMNEY,FPFUEL,NGFPFLUE,USENGFP,RANGE,RNGFUEL,DIFEQUIP,DIFFUEL,EQMAMT,HEATROOM,THERMAIN,NUMTHERM,PROTHERM,AUTOHEATNITE,AUTOHEATDAY,TEMPHOME,TEMPGONE,TEMPNITE,MOISTURE,USEMOISTURE,ZHEATHOME,ZDNTHEAT,ZEQUIPNOHEAT,ZFUELNOHEAT,ZEQUIPM,ZFUELHEAT,ZMAINTHT,ZEQUIPAGE,ZHEATOTH,ZFURNFUEL,ZRADFUEL,ZPIPEFUEL,ZRMHTFUEL,ZHSFUEL,ZFPFUEL,ZNGFPFLUE,ZUSENGFP,ZRNGFUEL,ZDIFFUEL,ZEQMAMT,ZHEATROOM,ZTHERMAIN,ZNUMTHERM,ZPROTHERM,ZAUTOHEATNITE,ZAUTOHEATDAY,ZTEMPHOME,ZTEMPGONE,ZTEMPNITE,ZMOISTURE,ZUSEMOISTURE,NUMH2ONOTNK,NUMH2OHTRS,H2OTYPE1,FUELH2O,WHEATOTH,WHEATSIZ,WHEATAGE,WHEATBKT,HELPWH,HELPWHY,H2OTYPE2,FUELH2O2,WHEATSIZ2,WHEATAGE2,ZNUMH2OHTRS,ZNUMH2ONOTNK,ZH2OTYPE1,ZFUELH2O,ZWHEATOTH,ZWHEATSIZ,ZWHEATAGE,ZWHEATBKT,ZH2OTYPE2,ZFUELH2O2,ZWHEATSIZ2,ZWHEATAGE2,AIRCOND,DNTAC,COOLTYPENOAC,COOLTYPE,DUCTS,CENACHP,ACOTHERS,MAINTAC,AGECENAC,REPLCCAC,HELPCAC,HELPCACY,ACROOMS,USECENAC,THERMAINAC,PROTHERMAC,AUTOCOOLNITE,AUTOCOOLDAY,TEMPHOMEAC,TEMPGONEAC,TEMPNITEAC,NUMBERAC,WWACAGE,ESWWAC,REPLCWWAC,HELPWWAC,HELPWWACY,USEWWAC,NUMCFAN,USECFAN,TREESHAD,NOTMOIST,USENOTMOIST,ZAIRCOND,ZDNTAC,ZCOOLTYPENOAC,ZCOOLTYPE,ZDUCTS,ZCENACHP,ZACOTHERS,ZMAINTAC,ZAGECENAC,ZUSECENAC,ZACROOMS,ZTHERMAINAC,ZPROTHERMAC,ZAUTOCOOLNITE,ZAUTOCOOLDAY,ZTEMPHOMEAC,ZTEMPGONEAC,ZTEMPNITEAC,ZNUMBERAC,ZWWACAGE,ZUSEWWAC,ZNUMCFAN,ZUSECFAN,ZTREESHAD,ZNOTMOIST,ZUSENOTMOIST,HIGHCEIL,CATHCEIL,SWIMPOOL,POOL,FUELPOOL,RECBATH,FUELTUB,LGT12,LGT12EE,LGT4,LGT4EE,LGT1,LGT1EE,NOUTLGTNT,LGTOEE,NGASLIGHT,INSTLCFL,HELPCFL,HELPCFLY,SLDDRS,DOOR1SUM,WINDOWS,TYPEGLASS,NEWGLASS,HELPWIN,HELPWINY,ADQINSUL,INSTLINS,AGEINS,HELPINS,HELPINSY,DRAFTY,INSTLWS,AGEWS,HELPWS,HELPWSY,AUDIT,AGEAUD,HELPAUD,HELPAUDY,ZHIGHCEIL,ZCATHCEIL,ZSWIMPOOL,ZPOOL,ZFUELPOOL,ZRECBATH,ZFUELTUB,ZLGT12,ZLGT4,ZLGT1,ZNOUTLGTNT,ZNGASLIGHT,ZSLDDRS,ZDOOR1SUM,ZWINDOWS,ZTYPEGLASS,ZNEWGLASS,ZADQINSUL,ZINSTLINS,ZAGEINS,ZDRAFTY,ZINSTLWS,ZAGEWS,ZAUDIT,ZAGEAUD,USEEL,USENG,USELP,USEFO,USEKERO,USEWOOD,USESOLAR,USEOTH,ELWARM,ELECAUX,ELCOOL,ELWATER,ELFOOD,ELOTHER,UGWARM,UGASAUX,UGWATER,UGCOOK,UGOTH,LPWARM,LPGAUX,LPWATER,LPCOOK,LPOTHER,FOWARM,FOILAUX,FOWATER,FOOTHER,KRWARM,KEROAUX,KRWATER,KROTHER,WDWARM,WOODAUX,WDWATER,WDOTHUSE,SOLWARM,SOLARAUX,SOLWATER,SOLOTHER,OTHWARM,OTHERAUX,OTHWATER,OTHCOOK,ONSITE,ONSITEGRID,PELHEAT,PELHOTWA,PELCOOK,PELAC,PELLIGHT,OTHERWAYEL,PGASHEAT,PGASHTWA,PUGCOOK,PUGOTH,OTHERWAYNG,FOPAY,OTHERWAYFO,LPGPAY,OTHERWAYLPG,LPGDELV,KERODEL,KEROCASH,NOCRCASH,NKRGALNC,WOODLOGS,WDSCRAP,WDPELLET,WDOTHER,WOODAMT,NUMCORDS,ZONSITE,ZONSITEGRID,ZPELHEAT,ZPELHOTWA,ZPELCOOK,ZPELAC,ZPELLIGHT,ZOTHERWAYEL,ZPGASHEAT,ZPGASHTWA,ZPUGCOOK,ZPUGOTH,ZOTHERWAYNG,ZFOPAY,ZOTHERWAYFO,ZLPGPAY,ZOTHERWAYLPG,ZKERODEL,ZKEROCASH,ZNOCRCASH,ZNKRGALNC,ZWOODLOGS,ZWDSCRAP,ZWDPELLET,ZWDOTHER,ZWOODAMT,ZNUMCORDS,KFUELOT,HHSEX,EMPLOYHH,SPOUSE,SDESCENT,Householder_Race,EDUCATION,NHSLDMEM,HHAGE,AGEHHMEMCAT2,AGEHHMEMCAT3,AGEHHMEMCAT4,AGEHHMEMCAT5,AGEHHMEMCAT6,AGEHHMEMCAT7,AGEHHMEMCAT8,AGEHHMEMCAT9,AGEHHMEMCAT10,AGEHHMEMCAT11,AGEHHMEMCAT12,AGEHHMEMCAT13,AGEHHMEMCAT14,HBUSNESS,ATHOME,TELLWORK,TELLDAYS,OTHWORK,WORKPAY,RETIREPY,SSINCOME,CASHBEN,INVESTMT,RGLRPAY,MONEYPY,POVERTY100,POVERTY150,HUPROJ,RENTHELP,FOODASST,ZHHSEX,ZHHAGE,ZEMPLOYHH,ZSPOUSE,ZSDESCENT,ZHouseholder_Race,ZEDUCATION,ZNHSLDMEM,ZAGEHHMEMCAT2,ZAGEHHMEMCAT3,ZAGEHHMEMCAT4,ZAGEHHMEMCAT5,ZAGEHHMEMCAT6,ZAGEHHMEMCAT7,ZAGEHHMEMCAT8,ZAGEHHMEMCAT9,ZAGEHHMEMCAT10,ZAGEHHMEMCAT11,ZAGEHHMEMCAT12,ZAGEHHMEMCAT13,ZAGEHHMEMCAT14,ZHBUSNESS,ZATHOME,ZTELLWORK,ZTELLDAYS,ZOTHWORK,ZWORKPAY,ZRETIREPY,ZSSINCOME,ZCASHBEN,ZINVESTMT,ZRGLRPAY,ZMONEYPY,ZHUPROJ,ZRENTHELP,ZFOODASST,TOTSQFT,TOTSQFT_EN,TOTHSQFT,TOTUSQFT,TOTCSQFT,TOTUCSQFT,ZTOTSQFT,ZTOTSQFT_EN,ZTOTHSQFT,ZTOTUSQFT,ZTOTCSQFT,ZTOTUCSQFT,KWH,KWHSPH,KWHCOL,KWHWTH,KWHRFG,KWHOTH,BTUEL,BTUELSPH,BTUELCOL,BTUELWTH,BTUELRFG,BTUELOTH,DOLLAREL,DOLELSPH,DOLELCOL,DOLELWTH,DOLELRFG,DOLELOTH,CUFEETNG,CUFEETNGSPH,CUFEETNGWTH,CUFEETNGOTH,BTUNG,BTUNGSPH,BTUNGWTH,BTUNGOTH,DOLLARNG,DOLNGSPH,DOLNGWTH,DOLNGOTH,GALLONLP,GALLONLPSPH,GALLONLPWTH,GALLONLPOTH,BTULP,BTULPSPH,BTULPWTH,BTULPOTH,DOLLARLP,DOLLPSPH,DOLLPWTH,DOLLPOTH,GALLONFO,GALLONFOSPH,GALLONFOWTH,GALLONFOOTH,BTUFO,BTUFOSPH,BTUFOWTH,BTUFOOTH,DOLLARFO,DOLFOSPH,DOLFOWTH,DOLFOOTH,GALLONKER,GALLONKERSPH,GALLONKERWTH,GALLONKEROTH,BTUKER,BTUKERSPH,BTUKERWTH,BTUKEROTH,DOLLARKER,DOLKERSPH,DOLKERWTH,DOLKEROTH,BTUWOOD,CORDSWD,TOTALBTU,TOTALBTUSPH,TOTALBTUCOL,TOTALBTUWTH,TOTALBTURFG,TOTALBTUOTH,TOTALDOL,TOTALDOLSPH,TOTALDOLCOL,TOTALDOLWTH,TOTALDOLRFG,TOTALDOLOTH,KAVALEL,PERIODEL,SCALEEL,KAVALNG,PERIODNG,SCALENG,PERIODLP,SCALELP,PERIODFO,SCALEFO,PERIODKR,SCALEKER'];
	column_ids = column_ids[0].split(',');

	#for i in range(len(column_ids)):
	#	if column_ids[i] == 'MONEYPY':
	#		print i
	# preprocess data

	tot_sqft = x[:,827];
	tot_sqft = [int(i) for i in tot_sqft];
	tot_sqft = np.array(tot_sqft);
	tot_sqft = [float(i) for i in tot_sqft]

	division = x[:,2];
	division = [int(i) for i in division];
	division = np.array(division);
	division = [float(i) for i in division];

	income = x[:,785];
	income = [int(i) for i in income];
	income = np.array(income);
	income = [float(i) for i in income];

	totaldol = x[:,851];
	totaldol = [int(i) for i in totaldol];
	totaldol = np.array(totaldol);
	totaldol = [float(i) for i in totaldol];

	dataCluster = np.column_stack((division, tot_sqft, income));
	dataClusterStd = np.column_stack((division, tot_sqft, income));

	# standardize data

	dataClusterStd[:,0] = ( ( ((dataCluster[:,0]) - (np.mean(dataCluster[:,0]))) / (np.std(dataCluster[:,0])) ) );
	dataClusterStd[:,1] = ( ( ((dataCluster[:,1]) - (np.mean(dataCluster[:,1]))) / (np.std(dataCluster[:,1])) ) );
	dataClusterStd[:,2] = ( ( ((dataCluster[:,2]) - (np.mean(dataCluster[:,2]))) / (np.std(dataCluster[:,2])) ) );

	# Machine Learning KMeans

	model = KMeans(n_clusters = 20, max_iter = 1000, n_init = 40);
	modelFit = KMeans.fit_predict(model, dataClusterStd);

	#first_idxs = np.where(modelFit == 1);
	#print "STD of Division: " + str(np.std(dataCluster[first_idxs, 0])) + "\nSTD of SqFeet: " + str(np.std(dataCluster[first_idxs, 1])) + "\nSTD of Income: " + str(np.std(dataCluster[first_idxs, 2]));

	return model, modelFit, dataCluster, totaldol;

def makePrediction(model, modelFit, data, totaldol, div, home_sqfeet, income_range, energybill):

	prediction = KMeans.predict(model, [float(div), float(home_sqfeet), float(income_range) ]);
	cluster = np.where(modelFit == prediction);

	lenC = len(cluster[0]);

	cluster_idxs = [];

	for i in range(lenC):
		cluster_idxs.append(cluster[0][i]);

	similar_users = np.array([ [], [], [] ]);
	dol_su = np.array([ ]);

	for i in range(len(cluster_idxs)):
		similar_users = np.insert( similar_users, i, data[ cluster_idxs[i], :] );
		dol_su = np.insert( dol_su, i, totaldol[ cluster_idxs[i] ] );

	dol_su = np.insert(dol_su, 0, energybill)
	dollar_ranks = np.sort(dol_su);

	print str((similar_users))

	# ranking algorithm for online setting

	user_ranking = [];

	for i in range(len(dollar_ranks)):
		if dollar_ranks[i] == (energybill):
			user_ranking.append(i);
			break;

 	print str(div), str(home_sqfeet), str(income_range)

	ranking = (user_ranking[0]);	

	return ranking, dollar_ranks
